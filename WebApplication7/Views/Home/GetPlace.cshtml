@model WebApplication7.ViewModels.PlaceViewModel

@{
    ViewData["Title"] = "GetPlace";
}
<div class="ad-container">
    <div class="text-container">
        <h1>@Model.SpecificPlace.Place_Name</h1>
        <h3>@Model.SpecificPlace.Place_City</h3>
        <p>@Model.SpecificPlace.Description</p>
        <div class="star-rating">
            @for (int i = 1; i <= 5; i++)
            {
                int temp;

                if (int.TryParse(@Model.SpecificPlace.Place_Rating, out temp))
                {
                    temp = Convert.ToInt32(@Model.SpecificPlace.Place_Rating);
                }
                else
                {
                    temp = 0;
                }
                if (i <= (temp))
                {
                    <span class="full-star">&#9733;</span>
                }
                else if (i - 1 < temp && temp < i)
                {
                    <span class="half-star">&#9734;</span>
                }
                else
                {
                    <!-- Empty star for numbers beyond the rating -->
                    <span class="empty-star">&#9734;</span>
                }
            }
            <span class="rating-number">(@Model.SpecificPlace.Place_Rating)</span>
        </div>
        <style>
    .star-rating {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .full-star, .empty-star, .half-star {
        font-size: 1.5rem;
        color: gold;
    }

    .half-star {
        color: lightgray;
    }

    .rating-number {
        margin-left: 8px;
        font-size: 1rem;
        color: #333;
    }
</style>

        <p>@Model.SpecificPlace.Place_Price EGP</p>
        <a href="/Booking/Create/@Model.SpecificPlace.Place_Id" class="cta-button">Book Now</a>
    </div>
    <div class="image-container">
        @if (Model.SpecificPlace.imageSrc == null || Model.SpecificPlace.imageSrc == "")
        {
            <img src="\Images\no-image-found.jpg" alt="No Image Available" />
        }
        else
        {
            <img src="@Model.SpecificPlace.imageSrc" alt="Place Image" />
        }
    </div>
</div>

<div>
    
    <a asp-action="Index">Back to List</a>
</div>
<div class="rating-box">
    <h2>Rate this Place</h2>
    <form class="rating-form" asp-action="UpdateRate" asp-route-id="@Model.SpecificPlace.Place_Id" method="post">
        <div class="star-rating">
            <input type="radio" id="star5" name="rating" value="5" required>
            <label for="star5" title="5 stars">&#9733;</label>

            <input type="radio" id="star4" name="rating" value="4">
            <label for="star4" title="4 stars">&#9733;</label>

            <input type="radio" id="star3" name="rating" value="3">
            <label for="star3" title="3 stars">&#9733;</label>

            <input type="radio" id="star2" name="rating" value="2">
            <label for="star2" title="2 stars">&#9733;</label>

            <input type="radio" id="star1" name="rating" value="1">
            <label for="star1" title="1 star">&#9733;</label>
        </div>

        <button type="submit" class="btn btn-primary">Submit Review</button>
    </form>
    <p class="rating-output" hidden>Current Rating: <span id="current-rating">0</span></p>
</div>

<script>
    const ratingForm = document.querySelector('.rating-form');
    const ratingOutput = document.getElementById('current-rating');

    ratingForm.addEventListener('change', function () {
        const selectedRating = ratingForm.querySelector('input[name="rating"]:checked').value;
        ratingOutput.textContent = selectedRating;
    });
</script>

<style>
    /* Rating Box Design */
    .rating-box {
        background: linear-gradient(135deg, #f7f7f7, #e2e2e2);
        padding: 30px;
        border-radius: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        text-align: center;
        max-width: 400px;
        margin: 0 auto;
        transition: transform 0.3s;
    }

        .rating-box:hover {
            transform: scale(1.05);
        }

    /* Heading */
    h2 {
        font-family: 'Arial', sans-serif;
        font-size: 24px;
        color: #333;
        margin-bottom: 20px;
    }

    /* Rating Form */
    .rating-form {
        display: flex;
        justify-content: center;
        margin-bottom: 20px;
    }

    /* Star Rating */
    .star-rating {
        display: flex;
        gap: 5px;
    }

        .star-rating input {
            display: none;
        }

        .star-rating label {
            font-size: 2.5rem;
            color: #ccc;
            cursor: pointer;
            transition: transform 0.2s ease, color 0.2s ease;
        }

            .star-rating label:hover,
            .star-rating input:checked ~ label {
                color: #ffd700;
            }

        .star-rating input:checked + label,
        .star-rating input:hover + label {
            transform: scale(1.2);
            color: #ffac33;
        }

    /* Submit Button */
    .btn-primary {
        background-color: #ff5722;
        border: none;
        padding: 10px 25px;
        border-radius: 30px;
        font-size: 1.2rem;
        color: white;
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #ff784e;
            cursor: pointer;
        }

    /* Rating Output */
    .rating-output {
        font-family: 'Arial', sans-serif;
        font-size: 1.2rem;
        color: #444;
        margin-top: 10px;
    }
</style>
<link href="/wwwroot/css/Review.css" rel="stylesheet">

<h3 class="reviews-title">People Reviews</h3>
<div class="reviews-container" id="review">
    @foreach (var item in Model.review)
    {
        <div class="review-item">
            <p class="" style="font:bold">@item.UserName</p>
            
            <p class="review-comment">@item.Comment</p>
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="DeleteReview" asp-route-id="@item.Review_Id" asp-route-placeid="@Model.SpecificPlace.Place_Id">Delete</a>
            }
        </div>
    }
</div>
<style>
    /* Style the section title */
.reviews-title {
    font-size: 24px;
    color: #333;
    text-align: center;
    margin-bottom: 20px;
    font-weight: bold;
}

/* Style the container holding all reviews */
.reviews-container {
    max-width: 800px;
    margin: 0 auto; /* Center the container */
    padding: 0 20px;
}

/* Style individual review items */
.review-item {
    background-color: #f1f1f1; /* Light background for the review item */
    border-left: 4px solid #28a745; /* Left border for emphasis */
    padding: 15px;
    margin-bottom: 15px;
    border-radius: 6px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* Slight shadow for depth */
    transition: transform 0.2s ease;
}

/* Add a slight hover effect for better interaction feedback */
.review-item:hover {
    transform: translateY(-5px);
}

/* Style the review comment text */
.review-comment {
    font-size: 16px;
    color: #555;
    line-height: 1.6;
    margin: 0;
}

/* Responsive styling for smaller devices */


</style>
@if (User.Identity.IsAuthenticated == true)
{

    <form asp-action="AddReview" asp-route-PlaceId="@Model.SpecificPlace.Place_Id" asp-route-Review="@Model.Review" class="review-form">
        <div class="form-group">
            <textarea asp-for="Review" class="form-control review-textarea"></textarea>
        </div>
        <button type="submit" class="cta-button review-button" >Send Review</button>
    </form>

}



<h3>Places You Might like</h3>
<partial name="_PlacesPartial" model="Model"></partial>
<style>


.ad-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 900px;
    width: 100%;
}

.text-container {
    max-width: 60%;
}

.text-container h1 {
    font-size: 24px;
    color: #333;
    margin-bottom: 10px;
}

.text-container p {
    font-size: 16px;
    color: #666;
    margin-bottom: 20px;
}

.cta-button {
    display: inline-block;
    background-color: #0073e6;
    color: white;
    padding: 10px 20px;
    text-decoration: none;
    border-radius: 5px;
    font-size: 16px;
}

.cta-button:hover {
    background-color: #005bb5;
}

.image-container img {
    max-width:350px;
    border-radius: 10px;
}

 
.hotel-listings {
    display: flex; /* Use flexbox for horizontal layout */
    flex-wrap: wrap; /* Allow wrapping to the next line if space runs out */
    gap: 20px; /* Space between cards */
    padding: 20px; /* Padding around the section */
    justify-content: center; /* Center the cards in the container */
}

.hotel-card {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    text-align: center;
    flex: 1 1 300px; /* Allow cards to grow, shrink, and have a base width of 300px */
    min-width: 250px; /* Minimum width for each card */
}

    .hotel-card img {
        width: 100%;
        height: 150px; /* Fixed height for the image */
        object-fit: cover; /* Cover the space without distortion */
    }

.hotel-info {
    padding: 15px; /* Padding inside the hotel info section */
}

    .hotel-info h3 {
        font-size: 18px; /* Font size for the place name */
        margin-bottom: 8px; /* Space below the title */
    }

    .hotel-info .rating {
        font-size: 14px; /* Font size for the rating */
        color: #2c9c1a; /* Color for the rating */
    }

    

    



</style>